# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: SVM.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='SVM.proto',
  package='project',
  syntax='proto3',
  serialized_pb=_b('\n\tSVM.proto\x12\x07project\"l\n\x06Matrix\x12\x0f\n\x07nb_rows\x18\x01 \x01(\x05\x12\x12\n\nnb_columns\x18\x02 \x01(\x05\x12\r\n\x05label\x18\x03 \x01(\t\x12\x1a\n\x04rows\x18\x04 \x03(\x0b\x32\x0c.project.Row\x12\x12\n\ncategories\x18\x05 \x03(\x05\"3\n\x03Row\x12\x1d\n\x05\x65ntry\x18\x02 \x03(\x0b\x32\x0e.project.Entry\x12\r\n\x05label\x18\x01 \x01(\t\"\x18\n\x06Status\x12\x0e\n\x06status\x18\x01 \x01(\t\"%\n\x05\x45ntry\x12\r\n\x05index\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x01\x32\x64\n\x03SVM\x12,\n\nGetWeights\x12\x0c.project.Row\x1a\x0c.project.Row\"\x00(\x01\x12/\n\x07GetData\x12\x0f.project.Matrix\x1a\x0f.project.Status\"\x00(\x01\x62\x06proto3')
)




_MATRIX = _descriptor.Descriptor(
  name='Matrix',
  full_name='project.Matrix',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='nb_rows', full_name='project.Matrix.nb_rows', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='nb_columns', full_name='project.Matrix.nb_columns', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='label', full_name='project.Matrix.label', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rows', full_name='project.Matrix.rows', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='categories', full_name='project.Matrix.categories', index=4,
      number=5, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22,
  serialized_end=130,
)


_ROW = _descriptor.Descriptor(
  name='Row',
  full_name='project.Row',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='entry', full_name='project.Row.entry', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='label', full_name='project.Row.label', index=1,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=132,
  serialized_end=183,
)


_STATUS = _descriptor.Descriptor(
  name='Status',
  full_name='project.Status',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='project.Status.status', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=185,
  serialized_end=209,
)


_ENTRY = _descriptor.Descriptor(
  name='Entry',
  full_name='project.Entry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='index', full_name='project.Entry.index', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='project.Entry.value', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=211,
  serialized_end=248,
)

_MATRIX.fields_by_name['rows'].message_type = _ROW
_ROW.fields_by_name['entry'].message_type = _ENTRY
DESCRIPTOR.message_types_by_name['Matrix'] = _MATRIX
DESCRIPTOR.message_types_by_name['Row'] = _ROW
DESCRIPTOR.message_types_by_name['Status'] = _STATUS
DESCRIPTOR.message_types_by_name['Entry'] = _ENTRY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Matrix = _reflection.GeneratedProtocolMessageType('Matrix', (_message.Message,), dict(
  DESCRIPTOR = _MATRIX,
  __module__ = 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:project.Matrix)
  ))
_sym_db.RegisterMessage(Matrix)

Row = _reflection.GeneratedProtocolMessageType('Row', (_message.Message,), dict(
  DESCRIPTOR = _ROW,
  __module__ = 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:project.Row)
  ))
_sym_db.RegisterMessage(Row)

Status = _reflection.GeneratedProtocolMessageType('Status', (_message.Message,), dict(
  DESCRIPTOR = _STATUS,
  __module__ = 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:project.Status)
  ))
_sym_db.RegisterMessage(Status)

Entry = _reflection.GeneratedProtocolMessageType('Entry', (_message.Message,), dict(
  DESCRIPTOR = _ENTRY,
  __module__ = 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:project.Entry)
  ))
_sym_db.RegisterMessage(Entry)



_SVM = _descriptor.ServiceDescriptor(
  name='SVM',
  full_name='project.SVM',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=250,
  serialized_end=350,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetWeights',
    full_name='project.SVM.GetWeights',
    index=0,
    containing_service=None,
    input_type=_ROW,
    output_type=_ROW,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetData',
    full_name='project.SVM.GetData',
    index=1,
    containing_service=None,
    input_type=_MATRIX,
    output_type=_STATUS,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_SVM)

DESCRIPTOR.services_by_name['SVM'] = _SVM

# @@protoc_insertion_point(module_scope)
