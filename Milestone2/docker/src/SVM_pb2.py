# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: SVM.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='SVM.proto',
  package='project',
  syntax='proto3',
  serialized_pb=_b('\n\tSVM.proto\x12\x07project\"\x06\n\x04Null\"V\n\x0bNode_Config\x12\x1b\n\x13\x63oordinator_address\x18\x01 \x01(\t\x12\x17\n\x0fworkers_address\x18\x02 \x03(\t\x12\x11\n\tworker_nb\x18\x03 \x01(\x05\"P\n\x0fLearning_Config\x12\n\n\x02lr\x18\x01 \x01(\x02\x12\x10\n\x08tot_iter\x18\x02 \x01(\x02\x12\x12\n\nbatch_size\x18\x03 \x01(\x05\x12\x0b\n\x03reg\x18\x04 \x01(\x02\"b\n\x03Row\x12\r\n\x05label\x18\x01 \x01(\t\x12\x1f\n\x07\x65ntries\x18\x02 \x03(\x0b\x32\x0e.project.Entry\x12\x18\n\x10iteration_number\x18\x03 \x01(\x05\x12\x11\n\tworker_nb\x18\x04 \x01(\x05\"\x18\n\x06Status\x12\x0e\n\x06status\x18\x01 \x01(\t\"%\n\x05\x45ntry\x12\r\n\x05index\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x01\x32\xa9\x02\n\x03SVM\x12+\n\nGetWeights\x12\x0c.project.Row\x1a\r.project.Null\"\x00\x12\x35\n\x0cSendNodeInfo\x12\x14.project.Node_Config\x1a\r.project.Null\"\x00\x12\x32\n\x10SendLearningInfo\x12\r.project.Null\x1a\r.project.Null\"\x00\x12\x36\n\x14SendCompletionSignal\x12\r.project.Null\x1a\r.project.Null\"\x00\x12\'\n\x05Start\x12\r.project.Null\x1a\r.project.Null\"\x00\x12)\n\tGetUpdate\x12\x0c.project.Row\x1a\x0c.project.Row\"\x00\x62\x06proto3')
)




_NULL = _descriptor.Descriptor(
  name='Null',
  full_name='project.Null',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22,
  serialized_end=28,
)


_NODE_CONFIG = _descriptor.Descriptor(
  name='Node_Config',
  full_name='project.Node_Config',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='coordinator_address', full_name='project.Node_Config.coordinator_address', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='workers_address', full_name='project.Node_Config.workers_address', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='worker_nb', full_name='project.Node_Config.worker_nb', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=30,
  serialized_end=116,
)


_LEARNING_CONFIG = _descriptor.Descriptor(
  name='Learning_Config',
  full_name='project.Learning_Config',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='lr', full_name='project.Learning_Config.lr', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tot_iter', full_name='project.Learning_Config.tot_iter', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='batch_size', full_name='project.Learning_Config.batch_size', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reg', full_name='project.Learning_Config.reg', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=118,
  serialized_end=198,
)


_ROW = _descriptor.Descriptor(
  name='Row',
  full_name='project.Row',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='label', full_name='project.Row.label', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='entries', full_name='project.Row.entries', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='iteration_number', full_name='project.Row.iteration_number', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='worker_nb', full_name='project.Row.worker_nb', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=200,
  serialized_end=298,
)


_STATUS = _descriptor.Descriptor(
  name='Status',
  full_name='project.Status',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='project.Status.status', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=300,
  serialized_end=324,
)


_ENTRY = _descriptor.Descriptor(
  name='Entry',
  full_name='project.Entry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='index', full_name='project.Entry.index', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='project.Entry.value', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=326,
  serialized_end=363,
)

_ROW.fields_by_name['entries'].message_type = _ENTRY
DESCRIPTOR.message_types_by_name['Null'] = _NULL
DESCRIPTOR.message_types_by_name['Node_Config'] = _NODE_CONFIG
DESCRIPTOR.message_types_by_name['Learning_Config'] = _LEARNING_CONFIG
DESCRIPTOR.message_types_by_name['Row'] = _ROW
DESCRIPTOR.message_types_by_name['Status'] = _STATUS
DESCRIPTOR.message_types_by_name['Entry'] = _ENTRY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Null = _reflection.GeneratedProtocolMessageType('Null', (_message.Message,), dict(
  DESCRIPTOR = _NULL,
  __module__ = 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:project.Null)
  ))
_sym_db.RegisterMessage(Null)

Node_Config = _reflection.GeneratedProtocolMessageType('Node_Config', (_message.Message,), dict(
  DESCRIPTOR = _NODE_CONFIG,
  __module__ = 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:project.Node_Config)
  ))
_sym_db.RegisterMessage(Node_Config)

Learning_Config = _reflection.GeneratedProtocolMessageType('Learning_Config', (_message.Message,), dict(
  DESCRIPTOR = _LEARNING_CONFIG,
  __module__ = 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:project.Learning_Config)
  ))
_sym_db.RegisterMessage(Learning_Config)

Row = _reflection.GeneratedProtocolMessageType('Row', (_message.Message,), dict(
  DESCRIPTOR = _ROW,
  __module__ = 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:project.Row)
  ))
_sym_db.RegisterMessage(Row)

Status = _reflection.GeneratedProtocolMessageType('Status', (_message.Message,), dict(
  DESCRIPTOR = _STATUS,
  __module__ = 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:project.Status)
  ))
_sym_db.RegisterMessage(Status)

Entry = _reflection.GeneratedProtocolMessageType('Entry', (_message.Message,), dict(
  DESCRIPTOR = _ENTRY,
  __module__ = 'SVM_pb2'
  # @@protoc_insertion_point(class_scope:project.Entry)
  ))
_sym_db.RegisterMessage(Entry)



_SVM = _descriptor.ServiceDescriptor(
  name='SVM',
  full_name='project.SVM',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=366,
  serialized_end=663,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetWeights',
    full_name='project.SVM.GetWeights',
    index=0,
    containing_service=None,
    input_type=_ROW,
    output_type=_NULL,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SendNodeInfo',
    full_name='project.SVM.SendNodeInfo',
    index=1,
    containing_service=None,
    input_type=_NODE_CONFIG,
    output_type=_NULL,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SendLearningInfo',
    full_name='project.SVM.SendLearningInfo',
    index=2,
    containing_service=None,
    input_type=_NULL,
    output_type=_NULL,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SendCompletionSignal',
    full_name='project.SVM.SendCompletionSignal',
    index=3,
    containing_service=None,
    input_type=_NULL,
    output_type=_NULL,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Start',
    full_name='project.SVM.Start',
    index=4,
    containing_service=None,
    input_type=_NULL,
    output_type=_NULL,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetUpdate',
    full_name='project.SVM.GetUpdate',
    index=5,
    containing_service=None,
    input_type=_ROW,
    output_type=_ROW,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_SVM)

DESCRIPTOR.services_by_name['SVM'] = _SVM

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class SVMStub(object):
    """Interface exported by the server.

    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetWeights = channel.unary_unary(
          '/project.SVM/GetWeights',
          request_serializer=Row.SerializeToString,
          response_deserializer=Null.FromString,
          )
      self.SendNodeInfo = channel.unary_unary(
          '/project.SVM/SendNodeInfo',
          request_serializer=Node_Config.SerializeToString,
          response_deserializer=Null.FromString,
          )
      self.SendLearningInfo = channel.unary_unary(
          '/project.SVM/SendLearningInfo',
          request_serializer=Null.SerializeToString,
          response_deserializer=Null.FromString,
          )
      self.SendCompletionSignal = channel.unary_unary(
          '/project.SVM/SendCompletionSignal',
          request_serializer=Null.SerializeToString,
          response_deserializer=Null.FromString,
          )
      self.Start = channel.unary_unary(
          '/project.SVM/Start',
          request_serializer=Null.SerializeToString,
          response_deserializer=Null.FromString,
          )
      self.GetUpdate = channel.unary_unary(
          '/project.SVM/GetUpdate',
          request_serializer=Row.SerializeToString,
          response_deserializer=Row.FromString,
          )


  class SVMServicer(object):
    """Interface exported by the server.

    """

    def GetWeights(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SendNodeInfo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SendLearningInfo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SendCompletionSignal(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Start(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetUpdate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_SVMServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetWeights': grpc.unary_unary_rpc_method_handler(
            servicer.GetWeights,
            request_deserializer=Row.FromString,
            response_serializer=Null.SerializeToString,
        ),
        'SendNodeInfo': grpc.unary_unary_rpc_method_handler(
            servicer.SendNodeInfo,
            request_deserializer=Node_Config.FromString,
            response_serializer=Null.SerializeToString,
        ),
        'SendLearningInfo': grpc.unary_unary_rpc_method_handler(
            servicer.SendLearningInfo,
            request_deserializer=Null.FromString,
            response_serializer=Null.SerializeToString,
        ),
        'SendCompletionSignal': grpc.unary_unary_rpc_method_handler(
            servicer.SendCompletionSignal,
            request_deserializer=Null.FromString,
            response_serializer=Null.SerializeToString,
        ),
        'Start': grpc.unary_unary_rpc_method_handler(
            servicer.Start,
            request_deserializer=Null.FromString,
            response_serializer=Null.SerializeToString,
        ),
        'GetUpdate': grpc.unary_unary_rpc_method_handler(
            servicer.GetUpdate,
            request_deserializer=Row.FromString,
            response_serializer=Row.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'project.SVM', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaSVMServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """Interface exported by the server.

    """
    def GetWeights(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SendNodeInfo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SendLearningInfo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SendCompletionSignal(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Start(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetUpdate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaSVMStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """Interface exported by the server.

    """
    def GetWeights(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetWeights.future = None
    def SendNodeInfo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SendNodeInfo.future = None
    def SendLearningInfo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SendLearningInfo.future = None
    def SendCompletionSignal(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SendCompletionSignal.future = None
    def Start(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    Start.future = None
    def GetUpdate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetUpdate.future = None


  def beta_create_SVM_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('project.SVM', 'GetUpdate'): Row.FromString,
      ('project.SVM', 'GetWeights'): Row.FromString,
      ('project.SVM', 'SendCompletionSignal'): Null.FromString,
      ('project.SVM', 'SendLearningInfo'): Null.FromString,
      ('project.SVM', 'SendNodeInfo'): Node_Config.FromString,
      ('project.SVM', 'Start'): Null.FromString,
    }
    response_serializers = {
      ('project.SVM', 'GetUpdate'): Row.SerializeToString,
      ('project.SVM', 'GetWeights'): Null.SerializeToString,
      ('project.SVM', 'SendCompletionSignal'): Null.SerializeToString,
      ('project.SVM', 'SendLearningInfo'): Null.SerializeToString,
      ('project.SVM', 'SendNodeInfo'): Null.SerializeToString,
      ('project.SVM', 'Start'): Null.SerializeToString,
    }
    method_implementations = {
      ('project.SVM', 'GetUpdate'): face_utilities.unary_unary_inline(servicer.GetUpdate),
      ('project.SVM', 'GetWeights'): face_utilities.unary_unary_inline(servicer.GetWeights),
      ('project.SVM', 'SendCompletionSignal'): face_utilities.unary_unary_inline(servicer.SendCompletionSignal),
      ('project.SVM', 'SendLearningInfo'): face_utilities.unary_unary_inline(servicer.SendLearningInfo),
      ('project.SVM', 'SendNodeInfo'): face_utilities.unary_unary_inline(servicer.SendNodeInfo),
      ('project.SVM', 'Start'): face_utilities.unary_unary_inline(servicer.Start),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_SVM_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('project.SVM', 'GetUpdate'): Row.SerializeToString,
      ('project.SVM', 'GetWeights'): Row.SerializeToString,
      ('project.SVM', 'SendCompletionSignal'): Null.SerializeToString,
      ('project.SVM', 'SendLearningInfo'): Null.SerializeToString,
      ('project.SVM', 'SendNodeInfo'): Node_Config.SerializeToString,
      ('project.SVM', 'Start'): Null.SerializeToString,
    }
    response_deserializers = {
      ('project.SVM', 'GetUpdate'): Row.FromString,
      ('project.SVM', 'GetWeights'): Null.FromString,
      ('project.SVM', 'SendCompletionSignal'): Null.FromString,
      ('project.SVM', 'SendLearningInfo'): Null.FromString,
      ('project.SVM', 'SendNodeInfo'): Null.FromString,
      ('project.SVM', 'Start'): Null.FromString,
    }
    cardinalities = {
      'GetUpdate': cardinality.Cardinality.UNARY_UNARY,
      'GetWeights': cardinality.Cardinality.UNARY_UNARY,
      'SendCompletionSignal': cardinality.Cardinality.UNARY_UNARY,
      'SendLearningInfo': cardinality.Cardinality.UNARY_UNARY,
      'SendNodeInfo': cardinality.Cardinality.UNARY_UNARY,
      'Start': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'project.SVM', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
